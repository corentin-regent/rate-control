name: Tests

on:
  pull_request:
  push:
    paths:
      - "**.py"
      - "!docs/conf.py"
      - "poetry.lock"
      - ".github/actions/setup/action.yml"
      - ".github/actions/test/action.yml"
      - ".github/workflows/test.yml"

jobs:
  test:
    name: Test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run tests
        uses: ./.github/actions/test
        with:
          coverage: ${{ matrix.python-version == '3.12' || matrix.python-version == '3.8' }}
          python-version: ${{ matrix.python-version }}
          runslow: ${{ matrix.python-version == '3.12' }}

  report:
    name: Report on coverage
    needs: test
    runs-on: ubuntu-latest
    env:
      from-fork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: poetry install --no-interaction --no-root --only coverage

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*

      - name: Combine coverage files
        run: poetry run coverage combine coverage-*/.coverage

      - name: Generate coverage report
        if: ${{ env.from-fork != 'true' }}
        run: poetry run coverage xml -i

      - name: Fix coverage source
        if: ${{ env.from-fork != 'true' }}
        run: sed -i "s/home\/runner\/work\/rate-control\/rate-control/github\/workspace/g" coverage.xml

      - name: Report to SonarCloud
        if: ${{ env.from-fork != 'true' }}
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Check code coverage
        run: >
          cov_percent=$(poetry run coverage report | awk '$1 == "TOTAL" {print $NF+0}');
          echo 'Coverage: ${cov_percent}%';
          [[ cov_percent -eq 100 ]] || exit 1
